{"version":3,"file":"jizy.umd.js","sources":["../src/jizy-component.tsx","../src/jizy.ts"],"sourcesContent":["import * as React from 'react';\nimport {JizyComponentClass} from './interfaces';\nimport {Store} from './store';\nimport {Lazy} from './lazy';\n\nexport interface JizyComponentProps {\n  Component?: React.ComponentClass<any>;\n}\n\nexport interface JizyComponentFactoryOptions<I extends string> {\n  jizy: Store<I> & Lazy;\n  importName: I;\n  getComponent(): Promise<JizyComponentClass>;\n}\n\n// tslint:disable-next-line only-arrow-functions\nexport function jizyComponentFactory<I extends string>(\n  options: JizyComponentFactoryOptions<I>\n) {\n  return class extends React.Component<any, JizyComponentProps> {\n    static displayName = 'Jizy';\n\n    constructor(props: any) {\n      super(props);\n\n      this.state = {\n        Component: options.jizy.store[options.importName]\n      };\n    }\n\n    render() {\n      if (\n        this.state.Component === undefined\n      ) {\n        return options.jizy.DefaultLoader === undefined ? null : (\n          <options.jizy.DefaultLoader />\n        );\n      }\n\n      return <this.state.Component />;\n    }\n\n    async componentDidMount() {\n      if (this.state.Component !== undefined) {\n        return;\n      }\n\n      // tslint:disable-next-line variable-name\n      const Component = await options.getComponent();\n      this.setState({\n        Component,\n      });\n    }\n  };\n}\n","import React from 'react';\nimport {JizyComponentClass} from './interfaces';\nimport {Store} from './store';\nimport {Lazy} from './lazy';\nimport {jizyComponentFactory} from './jizy-component';\n\nclass Jizy<I extends string> implements Store<I>, Lazy {\n  store: {[k: string]: React.ComponentClass<any>} = {};\n  components: {[P in I]: JizyComponentClass} = {} as {\n    [P in I]: JizyComponentClass\n  };\n  // tslint:disable-next-line variable-name\n  DefaultLoader: React.SFC<any> | React.ComponentClass<any> | undefined;\n\n  // tslint:disable-next-line variable-name\n  constructor(DefaultLoader?: React.SFC<any> | React.ComponentClass<any>) {\n    this.DefaultLoader = DefaultLoader;\n  }\n\n  async add(\n    importName: I,\n    getComponent: () => Promise<JizyComponentClass>\n  ): Promise<void> {\n    // tslint:disable-next-line variable-name\n    const JizyComponent = jizyComponentFactory<I>({\n      jizy: this,\n      importName,\n      getComponent\n    });\n\n    if (this.components !== undefined) {\n      this.components[importName] = JizyComponent;\n\n      return;\n    }\n\n    this.components = {\n      [importName]: JizyComponent\n    } as {[P in I]: any};\n  }\n}\n\nexport default Jizy;\n"],"names":["options","props","_super","_this","state","Component","jizy","store","importName","tslib_1.__extends","class_1","undefined","this","DefaultLoader","React.createElement","getComponent","_a","setState","React.Component","Jizy","JizyComponent","jizyComponentFactory","components"],"mappings":"qnDAiBEA,GAEA,qBAGE,WAAYC,GAAZ,MACEC,YAAMD,gBAENE,EAAKC,OACHC,UAAWL,EAAQM,KAAKC,MAAMP,EAAQQ,eA2B5C,kIAlCqBC,MAWnBC,mBAAA,WACE,YAC2BC,IAAzBC,KAAKR,MAAMC,eAE2BM,IAA/BX,EAAQM,KAAKO,cAA8B,KAChDC,gBAACd,EAAQM,KAAKO,oBAIXC,gBAACF,KAAKR,MAAMC,iBAGfK,8BAAN,yGACE,YAA6BC,IAAzBC,KAAKR,MAAMC,iBAKSL,EAAQe,8BAA1BV,EAAYW,SAClBJ,KAAKK,UACHZ,2BA/Bea,0BACE,iCCLvB,WAAYL,GARZD,cACAA,mBAQEA,KAAKC,cAAgBA,EAwBzB,OArBQM,gBAAN,SACEX,EACAO,4EASA,OANMK,EAAgBC,GACpBf,KAAMM,KACNJ,aACAO,sBAGsBJ,IAApBC,KAAKU,YACPV,KAAKU,WAAWd,GAAcY,QAKhCR,KAAKU,aAAaN,MACfR,GAAaY"}