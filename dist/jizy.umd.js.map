{"version":3,"file":"jizy.umd.js","sources":["../src/jizy.ts","../src/jizy-component.tsx"],"sourcesContent":["import React from 'react';\nimport {JizyComponentClass} from './interfaces';\nimport {Store} from './store';\nimport {Lazy} from './lazy';\nimport {jizyComponentFactory} from './jizy-component';\n\nclass Jizy<I extends string> implements Store<I>, Lazy {\n  store: {[k: string]: React.ComponentClass<any>} = {};\n  components: {[P in I]: JizyComponentClass} = {} as {\n    [P in I]: JizyComponentClass\n  };\n  // tslint:disable-next-line variable-name\n  DefaultLoader: React.SFC<any> | React.ComponentClass<any> | undefined;\n\n  // tslint:disable-next-line variable-name\n  constructor(DefaultLoader?: React.SFC<any> | React.ComponentClass<any>) {\n    this.DefaultLoader = DefaultLoader;\n  }\n\n  async add(\n    importName: I,\n    getComponent: () => Promise<JizyComponentClass>\n  ): Promise<void> {\n    // tslint:disable-next-line variable-name\n    const JizyComponent = jizyComponentFactory<I>({\n      jizy: this,\n      importName,\n      getComponent\n    });\n\n    if (this.components !== undefined) {\n      this.components[importName] = JizyComponent;\n\n      return;\n    }\n\n    this.components = {\n      [importName]: JizyComponent\n    } as {[P in I]: any};\n  }\n}\n\nexport default Jizy;\n","import * as React from 'react';\nimport {JizyComponentClass} from './interfaces';\nimport {Store} from './store';\nimport {Lazy} from './lazy';\n\nexport interface JizyComponentProps {\n  Component?: React.ComponentClass<any>;\n}\n\nexport interface JizyComponentFactoryOptions<I extends string> {\n  jizy: Store<I> & Lazy;\n  importName: I;\n  getComponent(): Promise<JizyComponentClass>;\n}\n\n// tslint:disable-next-line only-arrow-functions\nexport function jizyComponentFactory<I extends string>(\n  options: JizyComponentFactoryOptions<I>\n) {\n  return class extends React.Component<any, JizyComponentProps> {\n    static displayName = 'Jizy';\n\n    constructor(props: any) {\n      super(props);\n\n      this.state = {\n        Component: options.jizy.store[options.importName]\n      };\n    }\n\n    render() {\n      if (\n        this.state.Component === undefined\n      ) {\n        return options.jizy.DefaultLoader === undefined ? null : (\n          <options.jizy.DefaultLoader />\n        );\n      }\n\n      return <this.state.Component />;\n    }\n\n    async componentDidMount() {\n      if (this.state.Component !== undefined) {\n        return;\n      }\n\n      // tslint:disable-next-line variable-name\n      const Component = await options.getComponent();\n      this.setState({\n        Component,\n      });\n    }\n  };\n}\n"],"names":["[object Object]","DefaultLoader","this","importName","getComponent","JizyComponent","options","jizy","React.Component","props","super","state","Component","store","undefined","React.createElement","setState","components"],"mappings":"sdAeEA,YAAYC,GARZC,cACAA,mBAQEA,KAAKD,cAAgBA,EAGjBD,IACJG,EACAC,2CAGA,MAAMC,GCPRC,GDQIC,KAAML,KACNC,WAAAA,EACAC,aAAAA,oBCRiBI,YAGnBR,YAAYS,GACVC,MAAMD,GAENP,KAAKS,OACHC,UAAWN,EAAQC,KAAKM,MAAMP,EAAQH,aAI1CH,SACE,YAC2Bc,IAAzBZ,KAAKS,MAAMC,eAE2BE,IAA/BR,EAAQC,KAAKN,cAA8B,KAChDc,gBAACT,EAAQC,KAAKN,oBAIXc,gBAACb,KAAKS,MAAMC,gBAGfZ,4DACJ,QAA6Bc,IAAzBZ,KAAKS,MAAMC,UACb,OAIF,MAAMA,QAAkBN,EAAQF,eAChCF,KAAKc,UACHJ,UAAAA,qBA9BiB,cAHvBN,SDa0BQ,IAApBZ,KAAKe,WAMTf,KAAKe,aACFd,GAAaE,GANdH,KAAKe,WAAWd,GAAcE"}